name: starterboilerplate

# See: https://docs.devwithlando.io/tutorials/wordpress.html
recipe: wordpress
config:
  php: '7.4'
  webroot: public
  database: mariadb
  xdebug: true
  config:
    php: private/config/php.ini

# See: https://docs.devwithlando.io/config/proxy.html
proxy:
  appserver:
    - web.starterboilerplate.lndo.site
  node:
    - node.starterboilerplate.lndo.site
  database:
    - db.starterboilerplate.lndo.site
  mailhog:
    - mail.starterboilerplate.lndo.site
  pma:
    - pma.starterboilerplate.lndo.site

# See: https://docs.devwithlando.io/config/services.html
services:
  appserver:
    run_as_root:
      - "chown www-data: -R /app"
  node:
    type: node
    globals:
      npm: "latest"
      yarn: "latest"
      gulp-cli: "latest"
  database:
    portforward: 3308
    creds:
      user: wordpress
      password: wordpress
      database: wordpress
  mailhog:
    type: mailhog
    hogfrom:
      - appserver
    portforward: 1026
  pma:
    type: phpmyadmin
    hosts: database

# See: https://docs.devwithlando.io/config/tooling.html
tooling:
  node:
    service: node
  npm:
    service: node
  yarn:
    service: node
  gulp:
    service: node
  dep:
    service: appserver
    desription: run deployer commands
    cmd:
      - "vendor/bin/deployer.phar"
  phpcs:
    service: appserver
    desription: "Analyze code against the WordPress coding standards with PHP_CodeSniffer"
    cmd:
      - "vendor/bin/phpcs"
  phpcbf:
    service: appserver
    desription: "Fix coding standards warnings/errors automatically with PHP Code Beautifier"
    cmd:
      - "vendor/bin/phpcbf"

# See: https://docs.devwithlando.io/config/events.html
events:
  post-start:
    - appserver: cd $LANDO_MOUNT && composer install
    - node: cd $LANDO_MOUNT && npm install --save-dev
